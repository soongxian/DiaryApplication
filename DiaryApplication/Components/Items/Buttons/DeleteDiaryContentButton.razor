@inject NavigationManager NavigationManager
@inject IDiaryContentService DiaryContentService
@rendermode @(new InteractiveServerRenderMode(prerender: true))

<button @onclick="ShowConfirmationDialog" class="btn btn-danger">Delete</button>

@if (showConfirmation)
{
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Confirmation</h5>
                    <button type="button" class="close" @onclick="CloseDialog">&times;</button>
                </div>
                <div class="modal-body">
                    <p style="text-align:left">Please confirm to delete this content.</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseDialog">Cancel</button>
                    <button class="btn btn-danger" @onclick="ConfirmDelete">Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public EventCallback OnContentDeleted { get; set; }

    private bool showConfirmation = false;

    private void ShowConfirmationDialog()
    {
        showConfirmation = true;
    }

    private void CloseDialog()
    {
        showConfirmation = false;
    }

    private async Task ConfirmDelete()
    {
        await DiaryContentService.DeleteDiaryContent(Id);
        showConfirmation = false;
        await OnContentDeleted.InvokeAsync();
    }
}
